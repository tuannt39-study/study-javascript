
1 - Nhập môn JavaScript
2 - Hello JavaScript

alert('Hello JavaScript - Xin chao');
console.log('Hello');

---------
3 - Sử dụng console
4 - Kiểu dữ liệu - Number

console.log(3 + 10);
console.log(8 * 5);
console.log(8 / 4);
console.log(8 % 3);
console.log(3 - 10);

---------
5 - Kiểu dữ liệu - String

'thu nam'.length
'thu nam'.toUpperCase()
'thu nam'.toLowerCase()

---------
6 - Kiểu dữ liệu - Boolean.

true
false
2 == 2
2 == 1
3 > 1
3 < 1
3 < 3
3 <= 3
3 <= 1
1 < 2 && 2 > 3
1 < 2
2 > 3
3 < 3!(3 < 3) !(3 > 3)

---------
7 - Khai báo biến

var so_dep;
so_dep
var name = 'Leonardo';
name = 'Leonardo' + ' ' + 'Di Caprio';
name = 2016
console.log('2016')

/*
 * Program sample on learning Javascript
 * console.log('something);
 */

var name = 'Leo';
console.log(name);
name = 'Leo' + ' ' + 'Di Caprio';
console.log(name);
name = true;
console.log("name = " + name);

// check if this is an actor
var isActor = true;
// check if someone is hansome
var isHansome = true;
// should I like him
var shouldILikeHim = isActor && isHansome;
console.log('Should I like him? - Answer: ' + shouldILikeHim);

---------
8 - Cấu trúc điều kiện rẽ nhánh

var isGood = true;
if (isGood == true) {
  console.log('it is good');
}

var os = 2;
if (os == 1) {
  console.log('Windows');
} else if (os == 2) {
  console.log('Mac OS X');
} else if (os == 3) {
  console.log('Linux');
} else {
  console.log('Unknown Operating System');
}

switch (os) {
  case 1:
    console.log('Windows');
    break;
  case 2:
    console.log('Mac OS X');
    break;
  case 3:
    console.log('Linux');
    break;
  default:
    console.log('Unknown Operating System');
}

var movieRating = 8;

movieRating > 7 ? console.log('it \'s okay to watch') : console.log('Pick anothor movie');

---------
9 - Dữ liệu kiểu mảng.

var names = ['Leo', 'Tom', 'Brad'];
console.log(names);
names.push('Kevin');
console.log(names);

var names = ['Leo', 'Tom', 'Brad'];
console.log(names);
var last = names.pop();
console.log(names);
console.log(last);
console.log(names);

var names = ['Leo', 'Tom', 'Brad'];
console.log(names);
var first = names.shift();
console.log(names);
console.log(first);
console.log(names);

var names = ['Leo', 'Tom', 'Brad'];
console.log(names);
names[0] = 'Kevin';
console.log(names);


var names = ['Leo', 'Tom', 'Brad'];
console.log(names);
names.sort();
console.log(names);

var names = ['Leo', 'Tom', 'Brad'];
console.log(names);
var more = ['Kevin', 'Pete'];
console.log(names);

console.log(names.concat(more));
console.log(more.concat(names));

var names = ['Leo', 'Tom', 'Brad'];
console.log(names);
for (i = 0; i < names.length; i++) {
  console.log(names[i]);
}

---------
10 - Cấu trúc lặp

var sum = 0;
var i = 1;
for (i; i <= 10; i++) {
  sum += i;
}
console.log("Sum: " + sum);

var sum = 0;
var i = 1;
while (i <= 10) {
  sum += i;
  i++;
}
console.log("Sum: " + sum);

var sum = 0;
var i = 1;
do {
  sum += i;
  i++;
}
while (i <= 10);
console.log("Sum: " + sum);

var sum = 0;
var i = 1;
for (i; i <= 10; i++) {
  if (i > 5) {
    break;
  }
  sum += i;
}
console.log("Sum: " + sum);

var sum = 0;
var i = 1;
do {
  if (i == 5) {
    i += 1;
    continue;
  }
  sum += i;
  i++;
}
while (i <= 10);
console.log("Sum: " + sum);

var sum = 0;
var i = 1;
for (i; i <= 10; i++) {
  if (i % 2 == 1) {
    continue;
  }
  if (i > 8) {
    break
  }
  sum += i;
}
console.log("Sum: " + sum);

---------
11 - Giới thiệu về Hàm

console.log('this is a function');
alert('this is a alert() function');

function hello (name) {
    console.log('Hello ' + name)'
}
hello('Leo');
hello('Brad');

function add (a, b){
    return a+b;
}
var result = add(10, 10);
console.log('Result: ' + result);

var bye = function (name){
    return 'Goodbye' + name;
}
console.log(bye('Tom'));

var sum = function(start, end) {
  var result = 0;
  for (var i = start; i < end; i++) {
    result += i;
  }
  return result;
}
console.log('Sum(1, 10) = ' + sum(1, 10));

---------
12 - Phạm vi của biến

var name = "Leo";
function getName() {
  console.log('getName: ' + name);
}
getName();
console.log('name: ' + name);

var name = "Leo";
function getName() {
  var name = 'Brad';
  console.log('getName: ' + name);
}
getName();
console.log('name: ' + name);

var name = "Leo";
function getName(name) {
  console.log('getName: ' + name);
}
getName('Tom');
console.log('name: ' + name);

---------
13 - Đối tượng trong JavaScript

var duck = {
  color: 'yellow',
  talk: function() {
    return 'quack quack';
  }
};
console.log('Duck color: ' + duck.color);
console.log('Duck sounds: ' + duck.talk());
console.log('Duck color: ' + duck['color']);

var duck = {};
duck.name = 'Donald';
duck.color = 'Yellow';
duck.speak = function() {
  console.log('duck speaks quack quack');
}
console.log('duck name is ' + duck.name);
console.log('duck color is ' + duck.color);
duck.speak();

---------
14 - Hàm khởi tạo đối tượng

var donald = {
  name: 'Donald',
  color: 'Yellow',
  talk: function() {
    return 'quack quack';
  }
};
var daisy = {
  name: 'Daisy',
  color: 'Yellow',
  talk: function() {
    return 'quack quack';
  }
};

// Tạo nhóm đối tượng là: Duck
function Duck(name, color) {
  // Thiết lập thuộc tính name, color
  this.name = name;
  this.color = color;

  // Thiết lập phương thức chung
  this.talk = function() {
    return 'quack quack';
  }
}
// Tạo đối tượng: donald
var donald = new Duck('Donald', 'Yellow');
// Tạo đối tượng: daisy
var daisy = new Duck('Daisy', 'Yellow');
console.log(donald.name + ' speak ' + donald.talk());
console.log(daisy.name + ' speak ' + daisy.talk());

---------
15 - Prototype

function Duck(name, color) {
  // Thiết lập thuộc tính name, color
  this.name = name;
  this.color = 'yellow';

  // Thiết lập phương thức chung
  this.talk = function() {
    return 'quack quack';
  }
}

function Duck(name, color) {
  // Thiết lập thuộc tính name, color
  this.name = name;
  this.color = 'yellow';

  // Thiết lập phương thức chung
  this.talk = function() {
    return 'quack quack';
  }
}

Duck.height = 1.5;
Duck.walk = function(distance) {
  console.log(this.name + ' walks for ' + distance + 'meters');
};
var donald = new Duck('Donald', 'yellow');
console.log(donald.name + ' height is ' + donald.height + ' feet'); //Error
donald.walk(); //Error

Duck.prototype.height = 1.5;
Duck.prototype.walk = function(distance) {
  console.log(this.name + ' walks for ' + distance + ' meters');
};
var donald = new Duck('Donald', 'yellow');
console.log(donald.name + ' height is ' + donald.height + ' feet');
donald.walk(5);

-> Donald height is 1.5 feet
-> Donald walks for 5 meters

Duck.prototype = {
  height: 1.5,
  walk: function(distance) {
    console.log(this.name + ' walks for ' + distance + ' meters');
  }
}

---------
16 - JavaScript trong HTML

index16.html

---------
17 - Liên kết file js vào HTML

index17.html
app.js

---------
18 - Hiển thị kết quả JS lên trang web

index18.html

var h1 = document.querySelector('h1');
h1
h1.innerText='Hoc JS';
h1.innerHTML='<p>Leo 2017</p>';

---------
19 - Lấy dữ liệu từ người dùng sử dụng prompt

index19.html

---------
20 - Xử lý sự kiện nút bấm

index20.html

---------
21 - Lấy dữ liệu từ người dùng thông qua <input>

index21.html

---------
22 - Project 1

index22.html

---------
23 - Project 2

index23.html

